using System;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

namespace JusticeFramework.Utility {
	/// <summary>
	/// Component that provides hover text color changes for Unity buttons
	/// </summary>
	[Serializable]
	[RequireComponent(typeof(Button))]
	public class ButtonTextHighlight : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler {
		/// <summary>
		/// The text object whose color should be modified
		/// </summary>
		[SerializeField]
		private Text buttonText;

		/// <summary>
		/// The color to be used when the button is highlighted
		/// </summary>
		[SerializeField]
		private Color highlightColor;
		
		/// <summary>
		/// The color to be used when the button is pressed
		/// </summary>
		[SerializeField]
		private Color pressedColor;
		
		/// <summary>
		/// The color that the button started with
		/// </summary>
		[SerializeField]
		[HideInInspector]
		private Color initialColor;
		
		/// <summary>
		/// Flag inidicating if the button is currently being hovered
		/// </summary>
		private bool isHovering;

		/// <summary>
		/// Initializes the highlight script
		/// </summary>
		private void Awake() {
			isHovering = false;
			initialColor = buttonText.color;
		}
		
		/// <summary>
		/// Event called when the pointer first hovers over this object. Sets the text to the highlight color.
		/// </summary>
		/// <param name="eventData">The data generated by the hover event</param>
		public void OnPointerEnter(PointerEventData eventData) {
			isHovering = true;
			SetColor(highlightColor);
		}

		/// <summary>
		/// Event called when the pointer stops hovering over this object. Sets the text to its original color.
		/// </summary>
		/// <param name="eventData">The data generated by the hover event</param>
		public void OnPointerExit(PointerEventData eventData) {
			isHovering = false;
			SetColor(initialColor);
		}

		/// <summary>
		/// Event called when the pointer clicks down on this object. Sets the text to the pressed color.
		/// </summary>
		/// <param name="eventData">The data generated by the click event</param>
		public void OnPointerDown(PointerEventData eventData) {
			SetColor(pressedColor);
		}

		/// <summary>
		/// Event called when the pointer clicks up on this object. Sets the text to the highlight color if the mouse is hovering, else to its original color.
		/// </summary>
		/// <param name="eventData">The data generated by the click event</param>
		public void OnPointerUp(PointerEventData eventData) {
			SetColor(isHovering ? highlightColor : initialColor);
		}

		/// <summary>
		/// Sets the forecolor of the text object
		/// </summary>
		/// <param name="color">The color to set the text to</param>
		private void SetColor(Color color) {
			buttonText.color = color;
		}
	}
}